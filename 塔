/*小易有一些立方体，每个立方体的边长为1，他用这些立方体搭了一些塔。
现在小易定义：这些塔的不稳定值为它们之中最高的塔与最低的塔的高度差。
小易想让这些塔尽量稳定，所以他进行了如下操作：每次从某座塔上取下一块立方体，并把它放到另一座塔上。
注意，小易不会把立方体放到它原本的那座塔上，因为他认为这样毫无意义。
现在小易想要知道，他进行了不超过k次操作之后，不稳定值最小是多少*/
#include<stdio.h>
#include<algorithm>
using namespace std;
int tur[111];
int ansx[1111];
int ansy[1111];
int main()
{
    int n,k;
    while(scanf("%d%d",&n,&k)!=EOF)
    {
            int i;
        int minn=11111,maxx=0;
        for(i=1;i<=n;i++)
        {
            scanf("%d",&tur[i]);
            maxx=max(maxx,tur[i]);
            minn=min(minn,tur[i]);
        }
        int s=maxx-minn;
        int cont=0;
        for(i=1;i<=k;i++)
        {
            minn=11111;maxx=0;
            int maxid,minid;
            for(int j=1;j<=n;j++)
            {
             if(maxx<tur[j])
                 {
                 maxx=tur[j];
                 maxid=j;
                 }
              if(minn>tur[j])
                 {
                 minn=tur[j];
                   minid=j;
                 }
 
            }
            if(minn+1>=maxx)
                 break;
             else
                {
                 tur[minid]+=1;
                 tur[maxid]-=1;
                 ansx[i]=maxid;
                 ansy[i]=minid;
                 cont++;
                }
        }
         minn=11111;maxx=0;
         for(int j=1;j<=n;j++)
         {
             //printf("%d\n",tur[i]);
            maxx=max(maxx,tur[j]);
            minn=min(minn,tur[j]);
         }
         int b=maxx-minn;
     
            printf("%d %d\n",b,cont);
            for(i=1;i<=cont;i++)
                printf("%d %d\n",ansx[i],ansy[i]);
          
 
 
    }
}
