class Solution {
public:
    int removeBoxes(vector<int>& boxes) {
        _boxes = boxes;
        return dfs(0,boxes.size()-1,0);       
    }
    
    int dfs(int l, int r, int k){
        if(l<=r){
        while(l<r && _boxes[l] == _boxes[l+1]){
            l++;
            k++;
        }
        if(dp[l][r][k]!=0)
            return dp[l][r][k];
        
        int res = (k+1)*(k+1)+dfs(l+1,r,0);
        for(int j = l+1;j<=r;j++){
            if(_boxes[j]==_boxes[l]){
                res = max(res,dfs(l+1,j-1,0)+dfs(j,r,k+1));
            }
        }
        
        return dp[l][r][k]=res;
        }
        return 0;        
    }
    
private:
    int dp[100][100][100];
    vector<int> _boxes;
};
